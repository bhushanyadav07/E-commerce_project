{"version":3,"sources":["./src/app/components/filter/filter.component.html","./src/app/components/filter/filter.component.ts","./src/app/services/category/category.service.ts","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/signup/signup.component.html","./src/app/components/signup/signup.component.ts","./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/services/user/user.service.ts","./src/app/components/footer/footer.component.ts","./src/app/components/product-cart/product-cart.component.ts","./src/app/components/product-cart/product-cart.component.html","./src/app/components/cart/cart.component.ts","./src/app/components/cart/cart.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/login/login.component.html","./src/app/components/login/login.component.ts","./src/app/app.module.ts","./src/app/components/user-orders/user-orders.component.ts","./src/app/components/user-orders/user-orders.component.html","./src/app/components/store/store.component.ts","./src/app/components/store/store.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<div>\n    <div>\n        <h6>Categories</h6>\n        <hr>\n   \n        <div *ngFor = \"let c of categories\" class=\"custom-control custom-radio m-2\">\n            <input type=\"radio\" id=\"customRadio1\" name=\"categories\" class=\"custom-control-input\">\n            <label class=\"custom-control-label\" for=\"customRadio1\">{{c.name}}</label>\n        </div>\n    \n        \n    </div>\n    <div>\n        <h6>Price</h6>\n        <hr>\n\n        <select name=\"min\" class=\"form-control  mb-2\" id=\"\">\n            <option value = \"100\">100</option>\n        </select>\n        <select name=\"max\" class=\"form-control mb-2\" id=\"\">\n            <option value = \"100\">100</option>\n        </select>\n\n        <div class=\"mb-2\">\n            <button class = \"btn-block btn btn-sm btn-light border rounded\">Filter</button>\n        </div>\n    </div>\n\n    \n</div>","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { CategoryService } from 'src/app/services/category/category.service';\nimport { Category } from 'src/app/models/category';\n\n@Component({\n  selector: 'app-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.css']\n})\nexport class FilterComponent implements OnInit {\n  categories : Category[] = []\n  constructor(private categoryService : CategoryService) { }\n\n  ngOnInit(): void {\n    this.collectAllCategory()\n\n  }\n\n  collectAllCategory(){\n    this.categoryService.getAllCategories()\n    .subscribe({\n      next:(categories)=>{\n        this.categories = categories\n        console.log(categories);\n        \n      }, \n      error : (responce : HttpErrorResponse)=>{\n        console.log(responce);\n      }\n    })\n  }\n}\n\n/*    this.categoryService.getAllCategories()\n    .subscribe({\n      next : (categories)=>{\n        this.categories = categories\n        console.log(categories)\n\n      },\n      error : (responce : HttpErrorResponse)=>{\n        console.log(responce);\n      }\n    })*/ ","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Category } from 'src/app/models/category';\nimport { UserService } from '../user/user.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n  getURL = \"http://localhost/api/categories\"\n\n  constructor(private http : HttpClient, private user : UserService) { }\n \n  getAllCategories(){\n    return this.http.get(this.getURL)\n    .pipe(\n      map((result: any)=>{\n        return <Category[]>result['categories']\n      })\n    )\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <a class=\"navbar-brand\" routerLink=\"#\">E-commerce</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n  \n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item active\">\n          <a class=\"nav-link\" routerLink=\"\">Store <span class=\"sr-only\">(current)</span></a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/admin/dashboard\">Admin Dashboard</a>\n        </li>\n        \n      </ul>\n<!--Instead of href used routerlink(it doesn't reload the page) which is faster than href...href took more time to load thats why i used router link-->\n      <div class=\"form-inline my-2 my-lg-0\">\n        <ul class=\"navbar-nav mr-auto\">\n          <li class=\"nav-item active\">\n            <a class=\"nav-link\" routerLink=\"/orders\">Orders <span class=\"sr-only\">(current)</span></a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/cart\">Cart</a>\n          </li>\n          <li class=\"nav-item active\">\n            <a class=\"nav-link\" routerLink=\"/login\">login <span class=\"sr-only\">(current)</span></a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"javascript:void(0);\">logout</a> <!--we are not used any page here for logout we do this by using dynamic things-->\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/signup\">Signup</a>\n          </li>\n          \n          \n        </ul>\n      \n    </div>\n","<div class=\"text-center mt-4\" > <!--margin 4 mt-4-->\n    <form class=\"form-signin border rounded\" (submit)= 'signup($event)'> <!--for handling submit..created submit event-->\n        <img class=\"mb-4\" src=\"assets/cart.png\" alt=\"\" width=\"72\" height=\"72\">\n        <h1 class=\"h3 mb-3 font-weight-normal\">Create Account</h1>\n        <hr>\n<!--if error occurs  these two <P> lines shows to the user as an alert-->\n        <p *ngIf = 'error' class = 'alert alert-danger'>{{error}}</p>\n        <p *ngIf = 'success' class = 'alert alert-success'>{{success}}</p>\n        <!--Enter your name-->\n        <input type=\"text\" id=\"name\" name = \"name\" class=\"form-control mb-2\" placeholder=\"Your Name\" required autofocus>\n        <!--Enter your email-->\n        <input type=\"email\" id=\"inputEmail\" name = \"email\" class=\"form-control\" placeholder=\"Email address\" required autofocus>\n        <label for=\"inputPassword\" class=\"sr-only\">Password</label>\n        <input type=\"password\" id=\"inputPassword\" name = \"password\" class=\"form-control\" placeholder=\"Password\" required>\n\n        <!--contact number-->\n        <input type=\"number\" id=\"phone\" name = \"phone\" class=\"form-control mb-2\" placeholder=\"Phone number\" required>\n        \n        <button class=\"mt-3 btn btn-lg btn-light border rounded btn-block\" type=\"submit\">Create Account</button>\n        <!--<p class=\"mt-5 mb-3 text-muted\">&copy; 2020-2021</p>-->\n      </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { UserOrdersComponent } from '../user-orders/user-orders.component';\nimport {User} from '../../models/user'\nimport { UserService } from 'src/app/services/user/user.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  error! : any;\n  success! : any;\n\n\n\n\n\n  constructor(private userService : UserService, private router : Router) { }\n\n  ngOnInit(): void {\n  }\n\n  navigateToLoginPage(){\n    this.router.navigate(['login']) //navigate to login page\n  }\n\n\n  readValuesFromForm(form : HTMLFormElement){\n  \n    let name = (<HTMLFormElement>form.elements.namedItem('name')).value //I have proper info related name\n    let email = (<HTMLFormElement>form.elements.namedItem('email')).value\n    let password = (<HTMLFormElement>form.elements.namedItem('password')).value\n    let phone = (<HTMLFormElement>form.elements.namedItem('phone')).value\n\n    //so now i wrap all these thing into one object called user\n    let user : User = {\n      name,\n      email,\n      password,\n      phone\n    };\n    return user;\n  }\n//create a event for signup\n\n  signup(event: Event){\n    event.preventDefault(); //means we disabled default operation's like default signup stuffs\n    let form = <HTMLFormElement>event.target;\n    let user = this.readValuesFromForm(form) //need to save this user info createUser\n    this.createUser(user, form);//save the user info\n    \n  }\n\n  createUser(user : User, form : HTMLFormElement){\n    this.userService.signup(user).subscribe(\n      {\n        //coding part remaining for success\n        next : (result)=>{\n          console.log(result);\n          this.success = result;\n          \n          //this.success = result.message\n          form.reset();\n          //this.navigateToLoginPage()\n          this.error = undefined;\n \n          \n        },\n        error : (responce : HttpErrorResponse)=>{\n          console.log(responce);\n          this.error = responce.error.error.message\n          this.success = undefined;\n          \n        }\n      }\n    )\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class = \"pt-0 pr-2 pl-2\">\n    <hr>\n    <div class=\"row\">\n        <div class=\"col-lg-2 border border-top-0 border-left-0\">\n            <app-filter></app-filter>\n        </div>\n        <div class=\"col-lg-10 mx-auto\">\n            <app-store></app-store>\n        </div>\n    </div>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { User } from 'src/app/models/user';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private userSignupUrl = \"http://localhost/api/users/signup\"\n  private userLoginUrl = \"http://localhost/api/users/login\"\n  \n//we simply injected http client here, httpClient is class check out its documentation\n//once we created a object we can used any where we want\n  constructor(private http : HttpClient) { }\n\n  //now creating signup method for sending the info to server\n  signup(user: User){\n    return this.http.post(this.userSignupUrl, user).pipe(\n      map(result=>{\n        return <{message : string}>result\n      })\n    )\n\n\n  }\n  //now calling login service from user service it'll interact with api\n  login(credentials : {email : string, password : string}){\n    return this.http.post(this.userLoginUrl, credentials).pipe(\n      map(result=>{\n        return <loginResponce>result\n      })\n    )\n     \n  }\n}\n\ninterface loginResponce{\n  token : string,\n  message : string\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-product-cart',\n  templateUrl: './product-cart.component.html',\n  styleUrls: ['./product-cart.component.css']\n})\nexport class ProductCartComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"card\" style=\"width: 18rem;\">\n    <img class=\"card-img-top\" src=\"assets/cotton_shirt.jpg\" alt=\"Card image cap\">\n    <div class=\"card-body\">\n      <h6 class=\"card-title\">Cotton Printed Regular</h6>\n      <p class=\"card-text\"><b>$150</b></p>\n      <a href=\"#\" class=\"btn-sm float-right btn btn-outline-primary\">Add to Cart</a>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})\nexport class CartComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>cart works!</p>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ecommerce';\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>\n<app-footer></app-footer>","\n<div class=\"text-center mt-5\" > <!--margin 4 mt-4-->\n    <form class=\"form-signin border rounded\" method = \"post\" (submit)= 'login($event)'> <!--for handling submit..created submit event-->\n        <img class=\"mb-4\" src=\"assets/cart.png\" alt=\"\" width=\"72\" height=\"72\">\n        <h1 class=\"h3 mb-3 font-weight-normal\">Login</h1>\n        <hr>\n<!--if error occurs  these two <P> lines shows to the user as an alert-->\n        <p *ngIf = 'error' class = 'alert alert-danger'>{{error}}</p>\n        <p *ngIf = 'success' class = 'alert alert-success'>{{success}}</p>\n        \n        <!--Enter your email-->\n        <input type=\"email\" id=\"inputEmail\" name = \"email\" class=\"form-control\" placeholder=\"Email address\" required autofocus>\n        <label for=\"inputPassword\" class=\"sr-only\">Password</label>\n        <input type=\"password\" id=\"inputPassword\" name = \"password\" class=\"form-control\" placeholder=\"Password\" required>\n\n      \n        <button class=\"mt-3 btn btn-lg btn-light border rounded btn-block\" type=\"submit\">Login</button>\n      </form>\n</div>","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/services/user/user.service'\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  form! : HTMLFormElement;\n  error! : any;\n  success! : any;\n\n  constructor(private userService : UserService, private router : Router) { }\n\n  ngOnInit(): void {\n  }\n\n  login(event : Event){\n    event.preventDefault();\n    this.form = <HTMLFormElement>event.target\n    this.readFormValues();\n  }\n\n  //navigate the page when login performs\n  navigateToHomePage(){\n    this.router.navigate([''])\n\n  }\n\n  readFormValues(){\n    let email = (<HTMLFormElement>\n                  this.form.elements.namedItem('email')).value\n    let password = (<HTMLFormElement>\n                    this.form.elements.namedItem('password')).value\n\n\n    let credentials = {\n      email, password\n    }\n    //calling userService\n    console.log(credentials);\n    this.userService.login(credentials).subscribe({\n      next : (result)=>{\n        console.log(result);\n        this.success = result.message\n        this.error = undefined\n        this.navigateToHomePage()\n \n      },\n      error : (responce : HttpErrorResponse)=>{\n        console.log(responce.error);\n        this.success = undefined\n        this.error = responce.error.error.message\n      }\n    })\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { StoreComponent } from './components/store/store.component';\nimport { FilterComponent } from './components/filter/filter.component';\nimport { ProductCartComponent } from './components/product-cart/product-cart.component';\nimport { UserOrdersComponent } from './components/user-orders/user-orders.component';\nimport { CartComponent } from './components/cart/cart.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { HttpClientModule} from '@angular/common/http'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    HeaderComponent,\n    FooterComponent,\n    StoreComponent,\n    FilterComponent,\n    ProductCartComponent,\n    UserOrdersComponent,\n    CartComponent,\n    LoginComponent,\n    SignupComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user-orders',\n  templateUrl: './user-orders.component.html',\n  styleUrls: ['./user-orders.component.css']\n})\nexport class UserOrdersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>user-orders works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-store',\n  templateUrl: './store.component.html',\n  styleUrls: ['./store.component.css']\n})\nexport class StoreComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\n    <div class = \"m-1 mx-auto\">\n        <app-product-cart></app-product-cart>\n    </div> <!--margin inbetween card-->\n    <div class = \"m-1 mx-auto\">\n        <app-product-cart></app-product-cart>\n    </div>\n    <div class = \"m-1 mx-auto\">\n        <app-product-cart></app-product-cart>\n    </div>\n    <div class = \"m-1 mx-auto\">\n        <app-product-cart></app-product-cart>\n    </div>\n    <div class = \"m-1 mx-auto\">\n        <app-product-cart></app-product-cart>\n    </div>\n    <div class = \"m-1 mx-auto\">\n        <app-product-cart></app-product-cart>\n    </div>\n    <div class = \"m-1 mx-auto\">\n        <app-product-cart></app-product-cart>\n    </div>\n    \n</div>","import { Component, NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CartComponent } from './components/cart/cart.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { UserOrdersComponent } from './components/user-orders/user-orders.component';\n\nconst routes: Routes = [\n  {path : '', component : HomeComponent},  //if we want on same staring page blank path display default home\n  {path : 'home', component : HomeComponent},\n  {path : 'orders', component : UserOrdersComponent},\n  {path : 'cart', component : CartComponent},\n  {path : 'login', component : LoginComponent},\n  {path : 'signup', component : SignupComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}